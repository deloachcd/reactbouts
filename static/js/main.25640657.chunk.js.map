{"version":3,"sources":["serviceWorker.js","algorithm/shuffle.js","components/Buttons.js","components/Launcher.js","components/NameEntryRoster.js","components/BoutTimer.js","components/Bout.js","components/Leaderboard.js","components/BoutsContainer.js","components/algorithm/bout_order_algorithm.js","LaunchPage.js","index.js","components/img/logo.png"],"names":["Boolean","window","location","hostname","match","shuffle","arr","swap","i","j","tmp","length","Math","floor","random","StandardButton","props","react_default","a","createElement","type","className","onClick","text","StartButton","WinButton","ResetButton","shouldConfirm","confirm","Launcher","id","src","logo","alt","NameEntryField","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","getCurrentName","state","value","event","onChange","target","htmlFor","React","Component","NameEntryRoster","_this2","name_entry_fields","names_entered","addNameEntryField","removeNameEntryField","getNames","updateName","hasNamesOnRoster","_this3","new_fields","slice","new_names","combatant_num","push","NameEntryRoster_NameEntryField","key","new_name","setState","pop","map","console","log","_this4","startButtonClick","resetButtonClick","BoutTimer","total_seconds","next_second_timeout","getFormattedTime","incrementTime","timer_paused","minutes","seconds","String","seconds_fmt","concat","interval","setInterval","clearInterval","Bout","status","winner","runner_up","setRenderContentFromState","declareWinner","startBout","flipTimer","recordBoutResult","button","combatant_1","combatant_2","bout_number","components_BoutTimer","Leaderboard","groups","groupCombatantsByPoints","renderByGroup","combatants","ranked_combatants","new_groups","current_group_score","score","g","places","jsx_elements","names","e","name","join","previous_props","BoutsContainer","score_grid","Array","fill","printNames","generateRandomBouts","generateRankedBouts","generateRankings","array2d_modify_value","array","before","new_value","after","winner_id","indexOf","runner_id","new_score_grid","get_score","score_grid_row","reduce","total","element","found_non_zero","sort","b","bouts","components_Bout","l","r","bout_sequence","rows","add_inner_diagonals_values","k","add_lower_left_corner_value","add_hypotenuse_values","cardinality","repeat_index","bout_order","find_repeat","create_bout_sequence","sequence_entry","names_printable","mode","components_Leaderboard","LaunchPage","active_mode","names_submitted","changeMode","printable","new_mode","getActiveModePrintable","components_BoutsContainer","components_NameEntryRoster","setNamesSubmitted","components_Launcher","ReactDOM","render","src_LaunchPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.25640657.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function shuffle(arr) {\n    function swap(i, j) {\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n\n    for (let i = arr.length-1; i > 0; i--) {\n        swap(i, Math.floor(Math.random() * i));\n    }\n}\n\nexport default shuffle;","import React from 'react';\n\nfunction StandardButton(props) {\n    return <button type=\"button\"\n                   className=\"nes-btn padded-btn\"\n                   onClick={props.onClick}>{props.text}</button>;\n\n}\n\nfunction StartButton(props) {\n    return <button type=\"button\"\n                   className=\"nes-btn padded-btn wide-btn is-success\"\n                   onClick={props.onClick}>{props.text}</button>;\n\n}\n\nfunction WinButton(props) {\n    return <button type=\"button\"\n                   className=\"nes-btn padded-btn\"\n                   onClick={props.onClick}>\n                        <i className=\"nes-icon trophy is-medium\"></i>\n           </button>;\n\n}\n\nfunction ResetButton(props) {\n    return <button type=\"button\"\n                   className=\"nes-btn padded-btn wide-btn\"\n                   onClick={() => {\n                       if (props.shouldConfirm) {\n                           if (window.confirm(\n                               \"Are you sure you want to start over completely?\"))\n                           {\n                               props.onClick();\n                           } \n                       } else {\n                           props.onClick();\n                       }\n                   }}>\n                {props.text}\n           </button>;\n}\n\nexport {\n    StandardButton,\n    StartButton,\n    ResetButton,\n    WinButton,\n}","import React from 'react';\nimport { StandardButton } from './Buttons';\n\nimport logo from './img/logo.png';\n\nfunction Launcher(props) {\n    return (\n        <div>\n            <div className=\"center\" id=\"logo\">\n                <img src={logo} alt=\"logo\" className=\"bouts-logo\" />\n                <h1>ReactBouts</h1>\n                <StandardButton text=\"Random bouts\"\n                                onClick={() => props.onClick(\"Random\")} />\n                <StandardButton text=\"Ranked bouts\"\n                                onClick={() => props.onClick(\"Ranked\")} />\n                <div className=\"padded-small-text\">\n                    <small>\n                        Created by Chandler DeLoach\n                    </small>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Launcher;","import React from 'react';\n\nimport {StandardButton, ResetButton, StartButton} from './Buttons';\n\nclass NameEntryField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.getCurrentName = this.getCurrentName.bind(this);\n    }\n\n    getCurrentName() {\n        return this.state.value;\n    }\n\n    handleChange(event) {\n        this.props.onChange(this.props.id, event.target.value);\n    }\n\n    render() {\n        return <label htmlFor=\"name_field\">\n            Fencer #{this.props.id}:\n            <input type=\"text\" className=\"nes-input\"\n                   onChange={this.handleChange} />\n        </label>\n    }\n}\n\nclass NameEntryRoster extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name_entry_fields: [], \n            names_entered: [],\n        }\n\n        this.addNameEntryField = this.addNameEntryField.bind(this);\n        this.removeNameEntryField = this.removeNameEntryField.bind(this);\n        this.getNames = this.getNames.bind(this);\n        this.updateName = this.updateName.bind(this);\n        this.hasNamesOnRoster = this.hasNamesOnRoster.bind(this);\n    }\n\n    addNameEntryField() {\n        var new_fields = this.state.name_entry_fields.slice();\n        var new_names = this.state.names_entered.slice();\n        var combatant_num = new_fields.length+1;\n        new_names.push(\"\");\n        new_fields.push(<NameEntryField id={combatant_num}\n                                        key={combatant_num}\n                                        onChange={(id, new_name) =>\n                                            this.updateName(id, new_name)\n                                        }/>);\n        this.setState({\n            name_entry_fields: new_fields,\n            names_entered: new_names,\n        })\n    }\n\n    removeNameEntryField() {\n        var new_fields = this.state.name_entry_fields.slice();\n        var new_names = this.state.names_entered.slice();\n        new_fields.pop();\n        new_names.pop();\n        this.setState({\n            name_entry_fields: new_fields,\n            names_entered: new_names,\n        });\n    }\n\n    updateName(id, new_name) {\n        var new_names = this.state.names_entered.slice();\n        new_names[id-1] = new_name;\n        this.setState({\n            name_entry_fields: this.state.name_entry_fields,\n            names_entered: new_names,\n        });\n    }\n\n    getNames() {\n        this.state.names_entered.map(console.log);\n    }\n\n    hasNamesOnRoster() {\n        let has_names = !(this.state.names_entered.length === 0)\n        return has_names;\n    }\n\n    render() {\n        return (\n            <div className=\"nes-container with-title width60\">\n                <h2 className=\"title\">Fencer names</h2>\n                <div>\n                    {this.state.name_entry_fields}\n                </div>\n                <div>\n                    <StandardButton text=\"Add fencer\"\n                                    onClick={this.addNameEntryField}/>\n                    <StandardButton text=\"Remove fencer\"\n                                    onClick={this.removeNameEntryField}/>\n                </div>\n                <div>\n                    <StartButton text=\"Start bouts\"\n                                 onClick={() => this.props.startButtonClick(\n                                     this.state.names_entered\n                                 )}/>\n                </div>\n                <div>\n                    <ResetButton text=\"Return to menu\"\n                                 onClick={this.props.resetButtonClick}\n                                 shouldConfirm={this.hasNamesOnRoster()}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NameEntryRoster;","import React from 'react';\n\nclass BoutTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            total_seconds: 0,\n            next_second_timeout: null,\n        };\n\n        this.getFormattedTime.bind(this);\n        this.incrementTime.bind(this);\n    }\n\n    incrementTime() {\n        // Increment timer by a single second, provided\n        // the timer is active\n        const total_seconds = this.state.total_seconds;\n        const next_second_timeout = this.state.next_second_timeout;\n\n        this.setState({\n            total_seconds: (this.props.timer_paused) ? total_seconds\n                                                     : total_seconds+1,\n            next_second_timeout: next_second_timeout,\n        })\n    }\n\n    getFormattedTime() {\n        const total_seconds = this.state.total_seconds;\n        const minutes = Math.floor(total_seconds / 60);\n        const seconds = String(Math.floor(total_seconds % 60));\n        const seconds_fmt = (seconds.length < 2) ? '0' + seconds : seconds;\n\n        return `${minutes}:${seconds_fmt}`;\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.incrementTime(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"nes-container fixed-width-timer center\">\n                <h2>{this.getFormattedTime()}</h2>\n            </div>\n        );\n    }\n}\n\nexport default BoutTimer;","import React from 'react';\nimport { StandardButton, StartButton,\n         WinButton } from './Buttons';\nimport BoutTimer from './BoutTimer';\n\nclass Bout extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            timer_paused: true,\n            status: \"not started\",\n            winner: null,\n            runner_up: null,\n        }\n\n        this.setRenderContentFromState.bind(this);\n        this.declareWinner.bind(this);\n        this.startBout.bind(this);\n        this.flipTimer.bind(this);\n    }\n\n    declareWinner(winner, runner_up) {\n        this.setState({\n            timer_paused: true,\n            status: \"winner declared\",\n            winner: winner,\n            runner_up: runner_up,\n        });\n        this.props.recordBoutResult(winner, runner_up);\n    }\n\n    startBout() {\n        this.setState({\n            timer_paused: false,\n            status: \"in progress\",\n            winner: null,\n            runner_up: null,\n        });\n    }\n\n    flipTimer() {\n        this.setState({\n            timer_paused: !this.state.timer_paused,\n            status: this.state.status,\n            winner: this.state.winner,\n            runner_up: this.state.runner_up,\n        });\n    }\n\n    setRenderContentFromState() {\n        const combatant_1 = this.props.combatant_1;\n        const combatant_2 = this.props.combatant_2;\n\n        if (this.state.status === \"not started\") {\n            return (\n                <div>\n                    <h2 className=\"vertical-margin\">\n                        {combatant_1}&nbsp;vs.&nbsp;{combatant_2}\n                    </h2>\n                    <StartButton text=\"Start bout\"\n                                 onClick={() => this.startBout()}/>\n                </div>\n            );\n        } else if (this.state.status === \"in progress\") {\n            let button;\n            if (!this.state.timer_paused) {\n                button = <StandardButton text=\"Pause bout\"\n                                         onClick={() => this.flipTimer()}/>\n            } else {\n                button = <StandardButton text=\"Resume bout\"\n                                         onClick={() => this.flipTimer()}/>\n            }\n            return (\n                <div>\n                    <h2 className=\"vertical-margin\">\n                        <WinButton onClick={() =>\n                                       this.declareWinner(combatant_1,\n                                                          combatant_2)\n                                   }/>\n                        &nbsp;&nbsp;{combatant_1}\n                        &nbsp;vs.&nbsp;\n                        {combatant_2}&nbsp;&nbsp;\n                        <WinButton onClick={() =>\n                                       this.declareWinner(combatant_2,\n                                                          combatant_1)\n                                   }/>\n                    </h2>\n                    {button}\n                </div>\n            );\n        } else if (this.state.status === \"winner declared\") {\n            if (this.state.winner === combatant_1) {\n                return (\n                    <div>\n                        <h2 className=\"vertical-margin\">\n                            &nbsp;{combatant_1}&nbsp;wins!&nbsp;\n                            <br/><br/>\n                            <small className=\"vertical-margin\">\n                                Runner-up:&nbsp;{combatant_2}\n                            </small>\n                        </h2>\n                    </div>\n                );\n            } else if (this.state.winner === combatant_2) {\n                return (\n                    <div>\n                        <h2 className=\"vertical-margin\">\n                            &nbsp;{combatant_2}&nbsp;wins!&nbsp;\n                            <br/><br/>\n                            <small className=\"vertical-margin\">\n                                Runner-up:&nbsp;{combatant_1}\n                            </small>\n                        </h2>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <h2 className=\"vertical-margin\">\n                            How the hell did you get this state?\n                        </h2>\n                    </div>\n                );\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"nes-container with-title vertical-margin center\">\n                <h2 className=\"title\">Bout #{this.props.bout_number}</h2>\n                <BoutTimer timer_paused={this.state.timer_paused}/>\n                {this.setRenderContentFromState()}\n            </div>\n        );\n    }\n}; \n\nexport default Bout;","import React from 'react';\n\nclass Leaderboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            groups: [],\n        };\n\n        this.groupCombatantsByPoints = this.groupCombatantsByPoints.bind(this);\n        this.renderByGroup = this.renderByGroup.bind(this);\n    }\n\n    groupCombatantsByPoints() {\n        const combatants = this.props.ranked_combatants;\n\n        let new_groups = [[combatants[0]]];\n        let current_group_score = combatants[0].score;\n        for (var i = 1, g = 0; i < combatants.length; i++) {\n            if (combatants[i].score === current_group_score) {\n                new_groups[g].push(combatants[i]);\n            } else {\n                current_group_score = combatants[i].score;\n                new_groups.push([]);\n                new_groups[++g].push(combatants[i]);\n            }\n        }\n        \n        this.setState({\n            groups: new_groups,\n        });\n    }\n\n    renderByGroup() {\n        const places = [ \"1st\",   \"2nd\", \"3rd\",  \"4th\",  \"5th\",\n                         \"6th\",   \"7th\", \"8th\",  \"9th\", \"10th\",\n                        \"11th\", \"12th\", \"13th\", \"14th\", \"15th\",];\n        let groups = this.state.groups;\n        let jsx_elements = [];\n        if (groups !== []) {\n            for (var i = 0; i < groups.length; i++) {\n                let names = groups[i].map(e => e.name).join(', ');\n                jsx_elements.push(\n                    <div key={i}>\n                        <br/>\n                        <h2>{places[i]} Place</h2>\n                        <h3>{names}</h3>\n                    </div>\n                );\n            }\n        } else {\n            jsx_elements = [<h2>Nothing here yet!</h2>];\n        }\n        return jsx_elements;\n    }\n\n    componentDidUpdate(previous_props) {\n        if (this.props.ranked_combatants !== previous_props.ranked_combatants) {\n            this.groupCombatantsByPoints();\n        }\n    }\n\n    render() {\n        return <div className=\"nes-container with-title width90\">\n            <h2 className=\"title\">Leaderboard</h2>\n            {this.renderByGroup()}\n        </div>\n    }\n};\n\nexport default Leaderboard;","import React from 'react';\nimport { ResetButton } from './Buttons';\nimport { create_bout_sequence } from './algorithm/bout_order_algorithm'\nimport Bout from './Bout';\nimport Leaderboard from './Leaderboard';\n\nclass BoutsContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            score_grid: Array(this.props.names.length).fill(\n                Array(this.props.names.length).fill(0)\n            ),\n        }\n\n        this.printNames = this.printNames.bind(this);\n        this.recordBoutResult = this.recordBoutResult.bind(this);\n        this.generateRandomBouts = this.generateRandomBouts.bind(this);\n        this.generateRankedBouts = this.generateRankedBouts.bind(this);\n        this.generateRankings = this.generateRankings.bind(this);\n    }\n\n    recordBoutResult(winner, runner_up) {\n        function array2d_modify_value(array, i, j, value) {\n            // Equivalent to what sane programmers would expect\n            // `array[i][j] = value` to do, why this somehow modifies\n            // entire columns in this context is beyond me\n            let before = array[i].slice(0,j)\n            let new_value = [value]\n            let after = array[i].slice(j+1)\n            array[i] = before.concat(new_value).concat(after)\n        }\n\n        let winner_id = this.props.names.indexOf(winner);\n        let runner_id = this.props.names.indexOf(runner_up);\n        let new_score_grid = this.state.score_grid.slice();\n        \n        array2d_modify_value(new_score_grid, winner_id, runner_id, 2);\n        array2d_modify_value(new_score_grid, runner_id, winner_id, -1);\n        \n        this.setState({\n            score_grid: new_score_grid,\n        });\n    }\n\n    generateRankings() {\n        function has_non_zero_values(score_grid_row) {\n            // Used to determine whether or not a combatant\n            // has competed\n            return score_grid_row.reduce((found_non_zero, element) => {\n                return Boolean(found_non_zero || element !== 0);\n            });\n        }\n\n        function get_score(score_grid_row) {\n            return score_grid_row.reduce((total, element) => {\n                return total + element;\n            })\n        }\n\n        const names = this.props.names;\n        const score_grid = this.state.score_grid;\n        let combatants = [];\n        for (var i = 0; i < names.length; i++) {\n            if (has_non_zero_values(score_grid[i])) {\n                combatants.push({\n                    name: names[i],\n                    score: get_score(score_grid[i]),\n                });\n            }\n        }\n        combatants.sort((a, b) => {\n            return b.score - a.score;\n        })\n\n        console.log(combatants);\n        return combatants;\n    }\n\n    generateRandomBouts() {\n        let bouts = [], names = this.props.names;\n        if (names.length > 1) {\n            if (names.length % 2 === 0) {\n                // Even number of combatants, easy case\n                for (let i = 0; i < names.length; i += 2) {\n                    bouts.push(<Bout bout_number={Math.floor(i/2) + 1}\n                                     key={Math.floor(i/2) + 1}\n                                     combatant_1={names[i]}\n                                     combatant_2={names[i+1]}\n                                     recordBoutResult={this.recordBoutResult\n                                                       .bind(this)}\n                                     />);\n                }\n            } else {\n                // Odd number of combatants\n                for (let i = 0; i < names.length-1; i += 2) {\n                    bouts.push(<Bout bout_number={Math.floor(i/2) + 1}\n                                     key={Math.floor(i/2) + 1}\n                                     combatant_1={names[i]}\n                                     combatant_2={names[i+1]}\n                                     recordBoutResult={this.recordBoutResult\n                                                       .bind(this)}\n                                     />);\n                }\n                // Randomly pick a person who has already been placed\n                // in a bout to compete with final combatant\n                let l = names.length-1, \n                    r = Math.floor(Math.random() * (names.length-1));\n                bouts.push(<Bout bout_number={Math.floor(l/2) + 1}\n                                 key={Math.floor(l/2) + 1}\n                                 combatant_1={names[l]}\n                                 combatant_2={names[r]}\n                                 recordBoutResult={this.recordBoutResult\n                                                   .bind(this)}\n                                 />);\n            }\n        } else {\n            bouts = [\"Not enough combatants to generate any bouts!\"];\n        }\n        return bouts;\n    }\n\n    generateRankedBouts() {\n        const score_grid = this.state.score_grid;\n        const bout_sequence = create_bout_sequence(score_grid);\n        const names = this.props.names;\n        let bouts = [];\n        \n        for (var i = 0; i < bout_sequence.length; i++) {\n            let sequence_entry = bout_sequence[i];\n            bouts.push(<Bout bout_number={i+1}\n                             key={i+1}\n                             combatant_1={names[sequence_entry[0]]}\n                             combatant_2={names[sequence_entry[1]]}\n                             recordBoutResult={this.recordBoutResult\n                                               .bind(this)}\n                             />);\n        }\n        return bouts;\n    }\n\n    printNames() {\n        let names_printable = \"\"\n        for (let i = 0; i < this.props.names.length; i++) {\n            names_printable += this.props.names[i] + \", \";\n        }\n        return names_printable;\n    }\n    \n    render() {\n        if (this.props.mode === \"Random\") {\n            return (\n                <div className=\"width80\">\n                    {this.generateRandomBouts()}\n                    <ResetButton text=\"Return to menu\"\n                                    onClick={this.props.onClick}\n                                    shouldConfirm={true}/>\n                </div>\n            );\n        } else if (this.props.mode === \"Ranked\") {\n            return (\n                <div className=\"width90\">\n                    <Leaderboard ranked_combatants={this.generateRankings()}/>\n                    {this.generateRankedBouts()}\n                    <ResetButton text=\"Return to menu\"\n                                    onClick={this.props.onClick}\n                                    shouldConfirm={true}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default BoutsContainer;","function create_bout_sequence(score_grid) {\n\tvar rows = score_grid.length;\n\tvar bouts = [];\n\n\tfunction add_inner_diagonals_values() {\n\t\tfor (var k = 2; k < rows-1; k++) {\n\t\t\tfor (var i = k; i < rows; i++) {\n\t\t\t\tvar j = i-k;\n\t\t\t\tbouts.push([i, j]);\n\t\t\t}\n\t\t}\n\t}\n\n    function add_lower_left_corner_value() {\n        bouts.push([rows-1, 0]);\n\t}\n\n    function add_hypotenuse_values(cardinality) {\n\t\tvar start_index = (cardinality === 'even') ? 2 : 1;\n\t\tfor (var i = start_index; i < rows; i += 2) {\n            var j = i-1;\n            bouts.push([i, j]);\n\t\t}\n\t}\n\n    function find_repeat(bout_order) {\n\t\tfor (var i = 0; i < bout_order.length-1; i++) {\n\t\t\tif (bout_order[i][0] === bout_order[i+1][0] ||\n\t\t\t\t    bout_order[i][0] === bout_order[i+1][1] ||\n\t\t\t\t    bout_order[i][1] === bout_order[i+1][0] ||\n\t\t\t\t    bout_order[i][1] === bout_order[i+1][1]) {\n\t\t\t\treturn i+1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n    function swap(a, i, j) {\n        let tmp = a[i];\n        a[i] = a[j];\n        a[j] = tmp;\n    }\n\n    if (rows % 2 === 1) {\n        add_hypotenuse_values('odd');\n        add_lower_left_corner_value();\n        add_hypotenuse_values('even');\n        add_inner_diagonals_values();\n\t} else {\n        add_lower_left_corner_value();\n        add_hypotenuse_values('even');\n        add_hypotenuse_values('odd');\n        add_inner_diagonals_values();\n        let repeat_index = find_repeat(bouts);\n        swap(bouts, repeat_index, repeat_index+1);\n\t}\n\n    return bouts;\n}\n\n\nfunction get_num_bouts(num_combatants) {\n    return (Math.pow(num_combatants, 2) - num_combatants) / 2\n}\n\nexport {\n\tcreate_bout_sequence,\n\tget_num_bouts\n}","import React from 'react';\n\nimport shuffle from './algorithm/shuffle';\n\nimport Launcher from './components/Launcher';\nimport NameEntryRoster from './components/NameEntryRoster';\nimport BoutsContainer from './components/BoutsContainer';\n\nclass LaunchPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active_mode: null,\n            names_submitted: null,\n        }\n\n        this.changeMode = this.changeMode.bind(this)\n    }\n\n    getActiveModePrintable() {\n        let printable;\n        if (this.state.active_mode) {\n            if (this.state.active_mode === \"Ranked\") {\n                printable = \"Ranked bouts\";\n            } else if (this.state.active_mode === \"Random\") {\n                printable = \"Random bouts\";\n            }\n        } else {\n            printable = \"None\"; // shouldn't be any use for this case\n        }\n        return printable;\n    }\n\n    changeMode(new_mode) {\n        this.setState({active_mode: new_mode});\n    }\n\n    setNamesSubmitted(new_names) {\n        const active_mode = this.state.active_mode;\n        this.setState({\n            active_mode: active_mode,\n            names_submitted: new_names,\n        })\n    }\n\n    render() {\n        if (!this.state.active_mode) {\n            return <Launcher onClick={(new_mode) => this.changeMode(new_mode)}/>;\n        } else if (!this.state.names_submitted) {\n            return (\n                <div className=\"center\">\n                    <h2 className=\"padded-title\">\n                        {this.getActiveModePrintable()}\n                    </h2>\n                    <NameEntryRoster resetButtonClick={() =>\n                        this.changeMode(null)\n                    } startButtonClick={(names) => {\n                        shuffle(names);\n                        this.setNamesSubmitted(names);\n                    }}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"center\">\n                    <h2 className=\"padded-title\">\n                        {this.getActiveModePrintable()}\n                    </h2>\n                    <BoutsContainer onClick={() => {\n                                             this.setState({\n                                                 active_mode: null,\n                                                 names_submitted: null,\n                                             })}}\n                                    names={this.state.names_submitted}\n                                    mode={this.state.active_mode}\n                                           />\n                </div>\n            )\n        }\n    }\n}\n\nexport default LaunchPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/nes.css';\nimport './css/press_start_2P.css';\nimport './css/global_component_style.css';\n\nimport LaunchPage from './LaunchPage';\n\nReactDOM.render(<LaunchPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8aade420.png\";"],"sourceRoot":""}